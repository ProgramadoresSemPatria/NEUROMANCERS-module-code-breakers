export const roadmapNodes = [
  {
    id: "1",
    type: "custom",
    position: { x: 0, y: 0 },
    data: {
      label: "Arrays and Hashing",
      type: "source",
      prerequisites: [
        "Dynamic Arrays",
        "Hash Usage",
        "Hash Implementation",
        "Prefix Sums",
      ],
    },
    draggable: false,
  },
  {
    id: "2",
    type: "custom",
    position: { x: -100, y: 100 },
    data: {
      label: "Two Pointers",
      type: "both",
      prerequisites: ["Two Pointers"],
    },
    draggable: false,
  },
  {
    id: "3",
    type: "custom",
    position: { x: 100, y: 100 },
    data: { label: "Stack", type: "target", prerequisites: ["Stacks"] },
    draggable: false,
  },
  {
    id: "4",
    type: "custom",
    position: { x: -200, y: 200 },
    data: {
      label: "Binary Search",
      type: "both",
      prerequisites: ["Search Array", "Search Range"],
    },
    draggable: false,
  },
  {
    id: "5",
    type: "custom",
    position: { x: 0, y: 200 },
    data: {
      label: "Sliding Window",
      type: "target",
      prerequisites: [
        "Sliding Window Fixed Size",
        "Sliding Window Variable Size",
      ],
    },
    draggable: false,
  },
  {
    id: "6",
    type: "custom",
    position: { x: 200, y: 200 },
    data: {
      label: "Linked List",
      type: "both",
      prerequisites: [
        "Singly Linked Lists",
        "Doubly Linked Lists",
        "Fast and Slow Pointers",
      ],
    },
    draggable: false,
  },
  {
    id: "7",
    type: "custom",
    position: { x: -100, y: 300 },
    data: {
      label: "Trees",
      type: "both",
      prerequisites: [
        "BST Insert and Remove",
        "Depth-First Search",
        "Breadth-First Search",
        "BST Sets and Maps",
        "Iterative DFS",
      ],
    },
    draggable: false,
  },
  {
    id: "8",
    type: "custom",
    position: { x: -200, y: 400 },
    data: { label: "Tries", type: "both", prerequisites: ["Trie"] },
    draggable: false,
  },
  {
    id: "9",
    type: "custom",
    position: { x: 200, y: 400 },
    data: {
      label: "Backtracking",
      type: "both",
      prerequisites: ["Tree Maze", "Subsets", "Combinations", "Permutations"],
    },
    draggable: false,
  },
  {
    id: "10",
    type: "custom",
    position: { x: -300, y: 500 },
    data: {
      label: "Heap / Priority Queue",
      type: "both",
      prerequisites: [
        "Heap Properties",
        "Push and Pop",
        "Heapify",
        "Two Heaps",
      ],
    },
    draggable: false,
  },
  {
    id: "11",
    type: "custom",
    position: { x: 100, y: 500 },
    data: {
      label: "Graphs",
      type: "both",
      prerequisites: [
        "Intro to Graphs",
        "Matrix DFS",
        "Matrix BFS",
        "Adjacency List",
      ],
    },
    draggable: false,
  },
  {
    id: "12",
    type: "custom",
    position: { x: 450, y: 500 },
    data: {
      label: "1-D DP",
      type: "both",
      prerequisites: ["1-Dimension", "Palindromes"],
    },
    draggable: false,
  },
  {
    id: "13",
    type: "custom",
    position: { x: -400, y: 600 },
    data: { label: "Intervals", type: "target", prerequisites: [""] },
    draggable: false,
  },
  {
    id: "14",
    type: "custom",
    position: { x: -200, y: 600 },
    data: {
      label: "Greedy",
      type: "target",
      prerequisites: ["Kadane's Algorithm"],
    },
    draggable: false,
  },
  {
    id: "15",
    type: "custom",
    position: { x: 0, y: 600 },
    data: {
      label: "Advanced Graphs",
      type: "target",
      prerequisites: ["Dijktra's", "Prim's", "Kruskal's", "Topological Sort"],
    },
    draggable: false,
  },
  {
    id: "16",
    type: "custom",
    position: { x: 300, y: 600 },
    data: {
      label: "2-D DP",
      type: "target",
      prerequisites: [
        "2-Dimension DP",
        "0 / 1 Knapsack",
        "Unbounded Knapsack",
        "LCS",
      ],
    },
    draggable: false,
  },
  {
    id: "17",
    type: "custom",
    position: { x: 500, y: 600 },
    data: {
      label: "Bit Manipulation",
      type: "both",
      prerequisites: ["Bit Operations"],
    },
    draggable: false,
  },
  {
    id: "18",
    type: "custom",
    position: { x: 200, y: 700 },
    data: { label: "Math & Geometry", type: "target", prerequisites: [""] },
    draggable: false,
  },
];
