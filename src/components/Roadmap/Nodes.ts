export const roadmapNodes = [
  {
    id: "1",
    type: "custom",
    position: { x: 0, y: 0 },
    data: { label: "Arrays and Hashing", type: "source" },
    draggable: false,
    prerequistes: [
      "Dynamic Arrays",
      "Hash Usage",
      "Hash Implementation",
      "Prefix Sums",
    ],
  },
  {
    id: "2",
    type: "custom",
    position: { x: -100, y: 100 },
    data: { label: "Two Pointers", type: "both" },
    draggable: false,
    prerequistes: ["Two Pointers"],
  },
  {
    id: "3",
    type: "custom",
    position: { x: 100, y: 100 },
    data: { label: "Stack", type: "target" },
    draggable: false,
    prerequistes: ["Stacks"],
  },
  {
    id: "4",
    type: "custom",
    position: { x: -200, y: 200 },
    data: { label: "Binary Search", type: "both" },
    draggable: false,
    prerequistes: ["Search Array", "Search Range"],
  },
  {
    id: "5",
    type: "custom",
    position: { x: 0, y: 200 },
    data: { label: "Sliding Window", type: "target" },
    draggable: false,
    prerequistes: ["Sliding Window Fixed Size", "Sliding Window Variable Size"],
  },
  {
    id: "6",
    type: "custom",
    position: { x: 200, y: 200 },
    data: { label: "Linked List", type: "both" },
    draggable: false,
    prerequistes: [
      "Singly Linked Lists",
      "Doubly Linked Lists",
      "Fast and Slow Pointers",
    ],
  },
  {
    id: "7",
    type: "custom",
    position: { x: -100, y: 300 },
    data: { label: "Trees", type: "both" },
    draggable: false,
    prerequistes: [
      "BST Insert and Remove",
      "Depth-First Search",
      "Breadth-First Search",
      "BST Sets and Maps",
      "Iterative DFS",
    ],
  },
  {
    id: "8",
    type: "custom",
    position: { x: -200, y: 400 },
    data: { label: "Tries", type: "both" },
    draggable: false,
    prerequistes: ["Trie"],
  },
  {
    id: "9",
    type: "custom",
    position: { x: 200, y: 400 },
    data: { label: "Backtracking", type: "both" },
    draggable: false,
    prerequistes: ["Tree Maze", "Subsets", "Combinations", "Permutations"],
  },
  {
    id: "10",
    type: "custom",
    position: { x: -300, y: 500 },
    data: { label: "Heap / Priority Queue", type: "both" },
    draggable: false,
    prerequistes: ["Heap Properties", "Push and Pop", "Heapify", "Two Heaps"],
  },
  {
    id: "11",
    type: "custom",
    position: { x: 100, y: 500 },
    data: { label: "Graphs", type: "both" },
    draggable: false,
    prerequistes: [
      "Intro to Graphs",
      "Matrix DFS",
      "Matrix BFS",
      "Adjacency List",
    ],
  },
  {
    id: "12",
    type: "custom",
    position: { x: 450, y: 500 },
    data: { label: "1-D DP", type: "both" },
    draggable: false,
    prerequistes: ["1-Dimension", "Palindromes"],
  },
  {
    id: "13",
    type: "custom",
    position: { x: -400, y: 600 },
    data: { label: "Intervals", type: "target" },
    draggable: false,
    prerequistes: [""],
  },
  {
    id: "14",
    type: "custom",
    position: { x: -200, y: 600 },
    data: { label: "Greedy", type: "target" },
    draggable: false,
    prerequistes: ["Kadane's Algorithm"],
  },
  {
    id: "15",
    type: "custom",
    position: { x: 0, y: 600 },
    data: { label: "Advanced Graphs", type: "target" },
    draggable: false,
    prerequistes: ["Dijktra's", "Prim's", "Kruskal's", "Topological Sort"],
  },
  {
    id: "16",
    type: "custom",
    position: { x: 300, y: 600 },
    data: { label: "2-D DP", type: "target" },
    draggable: false,
    prerequistes: [
      "2-Dimension DP",
      "0 / 1 Knapsack",
      "Unbounded Knapsack",
      "LCS",
    ],
  },
  {
    id: "17",
    type: "custom",
    position: { x: 500, y: 600 },
    data: { label: "Bit Manipulation", type: "both" },
    draggable: false,
    prerequistes: ["Bit Operations"],
  },
  {
    id: "18",
    type: "custom",
    position: { x: 200, y: 700 },
    data: { label: "Math & Geometry", type: "target" },
    draggable: false,
    prerequistes: [""],
  },
];
